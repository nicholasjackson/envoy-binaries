name: Build
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get envoy version
        id: tag
        run: |-
          # Get latest envoy version
          ENVOY_VERSION=$(curl -s https://registry.hub.docker.com/v2/repositories/envoyproxy/envoy-windows/tags  | jq -r '.results[]["name"]' | sort -V -r | head -n 1)
          CURRENT_VERSION=$(curl --silent "https://api.github.com/repos/nicholasjackson/envoy-binaries/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

          echo "::set-output name=version::$ENVOY_VERSION"
          echo "::set-output name=current::$CURRENT_VERSION"

      - name: Remove v in Tag
        id: version
        uses: ashley-taylor/regex-property-action@v1.0
        with:
          value: ${{steps.tag.outputs.version}}
          regex: "v"
          replacement: ""

    outputs:
      version: ${{steps.version.outputs.value}}
      tag: ${{steps.tag.outputs.version}}
      current: ${{steps.tag.outputs.current}}

  amd64:
    needs: setup
    if: needs.setup.outputs.tag != needs.setup.outputs.current
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download binary
        run: |
          docker create --name envoy_amd64 envoyproxy/envoy:${{needs.setup.outputs.tag}}
          docker cp envoy_amd64:/usr/local/bin/envoy envoy
          docker rm envoy_amd64

      - name: Zip binary
        run: |
          zip envoy_${{needs.setup.outputs.version}}_linux_amd64.zip ./envoy

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: envoy_${{needs.setup.outputs.version}}_linux_amd64.zip

  arm64:
    needs: setup
    if: needs.setup.outputs.tag != needs.setup.outputs.current
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Download binary
        run: |
          docker create --name envoy_arm64 envoyproxy/envoy:${{needs.setup.outputs.tag}}
          docker cp envoy_arm64:/usr/local/bin/envoy envoy
          docker rm envoy_arm64

      - name: Zip binary
        run: |
          zip envoy_${{needs.setup.outputs.version}}_linux_arm64.zip ./envoy

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: envoy_${{needs.setup.outputs.version}}_linux_arm64.zip

  windows:
    needs: setup
    if: needs.setup.outputs.tag != needs.setup.outputs.current
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download binary
        run: |
          docker create --name envoy_windows envoyproxy/envoy-windows:${{needs.setup.outputs.tag}}
          docker cp "envoy_windows:C:\Program Files\envoy\envoy.exe" "C:\envoy.exe"
          docker rm envoy_windows

      - name: Zip binary
        run: |
          Compress-Archive -Path C:\envoy.exe -DestinationPath C:\envoy_${{needs.setup.outputs.version}}_windows_amd64.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: C:\envoy_${{needs.setup.outputs.version}}_windows_amd64.zip

  release:
    needs: [setup, amd64, arm64, windows]
    runs-on: ubuntu-latest
    steps:
      - name: Tag release
        uses: mathieudutour/github-tag-action@v5.6
        with:
          tag_prefix: ""
          custom_tag: ${{needs.setup.outputs.version}}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binaries

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            envoy_${{needs.setup.outputs.version}}_linux_arm64.zip
            envoy_${{needs.setup.outputs.version}}_linux_amd64.zip
            envoy_${{needs.setup.outputs.version}}_windows_amd64.zip
          tag_name: ${{needs.setup.outputs.tag}}
